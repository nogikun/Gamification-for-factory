"use strict";(globalThis.webpackChunkworker_app=globalThis.webpackChunkworker_app||[]).push([[3578],{"./node_modules/@mui/material/esm/styles/ThemeProvider.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>styles_ThemeProvider_ThemeProvider});var react=__webpack_require__("./node_modules/react/index.js");const useTheme_ThemeContext=react.createContext(null);function useTheme(){return react.useContext(useTheme_ThemeContext)}const nested="function"==typeof Symbol&&Symbol.for?Symbol.for("mui.nested"):"__THEME_NESTED__";var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const ThemeProvider_ThemeProvider=function ThemeProvider(props){const{children,theme:localTheme}=props,outerTheme=useTheme(),theme=react.useMemo((()=>{const output=null===outerTheme?{...localTheme}:function mergeOuterLocalTheme(outerTheme,localTheme){if("function"==typeof localTheme)return localTheme(outerTheme);return{...outerTheme,...localTheme}}(outerTheme,localTheme);return null!=output&&(output[nested]=null!==outerTheme),output}),[localTheme,outerTheme]);return(0,jsx_runtime.jsx)(useTheme_ThemeContext.Provider,{value:theme,children})};var emotion_element_f0de968e_browser_esm=__webpack_require__("./node_modules/@emotion/react/dist/emotion-element-f0de968e.browser.esm.js"),useThemeWithoutDefault=__webpack_require__("./node_modules/@mui/system/esm/useThemeWithoutDefault/useThemeWithoutDefault.js"),RtlProvider=__webpack_require__("./node_modules/@mui/system/esm/RtlProvider/index.js"),DefaultPropsProvider=__webpack_require__("./node_modules/@mui/system/esm/DefaultPropsProvider/DefaultPropsProvider.js");const EMPTY_THEME={};function useThemeScoping(themeId,upperTheme,localTheme,isPrivate=!1){return react.useMemo((()=>{const resolvedTheme=themeId&&upperTheme[themeId]||upperTheme;if("function"==typeof localTheme){const mergedTheme=localTheme(resolvedTheme),result=themeId?{...upperTheme,[themeId]:mergedTheme}:mergedTheme;return isPrivate?()=>result:result}return themeId?{...upperTheme,[themeId]:localTheme}:{...upperTheme,...localTheme}}),[themeId,upperTheme,localTheme,isPrivate])}const esm_ThemeProvider_ThemeProvider=function ThemeProvider_ThemeProvider_ThemeProvider(props){const{children,theme:localTheme,themeId}=props,upperTheme=(0,useThemeWithoutDefault.A)(EMPTY_THEME),upperPrivateTheme=useTheme()||EMPTY_THEME,engineTheme=useThemeScoping(themeId,upperTheme,localTheme),privateTheme=useThemeScoping(themeId,upperPrivateTheme,localTheme,!0),rtlValue="rtl"===(themeId?engineTheme[themeId]:engineTheme).direction;return(0,jsx_runtime.jsx)(ThemeProvider_ThemeProvider,{theme:privateTheme,children:(0,jsx_runtime.jsx)(emotion_element_f0de968e_browser_esm.T.Provider,{value:engineTheme,children:(0,jsx_runtime.jsx)(RtlProvider.A,{value:rtlValue,children:(0,jsx_runtime.jsx)(DefaultPropsProvider.A,{value:themeId?engineTheme[themeId].components:engineTheme.components,children})})})})};var identifier=__webpack_require__("./node_modules/@mui/material/esm/styles/identifier.js");function ThemeProviderNoVars({theme:themeInput,...props}){const scopedTheme=identifier.A in themeInput?themeInput[identifier.A]:void 0;return(0,jsx_runtime.jsx)(esm_ThemeProvider_ThemeProvider,{...props,themeId:scopedTheme?identifier.A:void 0,theme:scopedTheme||themeInput})}var styleFunctionSx=__webpack_require__("./node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js"),GlobalStyles=__webpack_require__("./node_modules/@mui/styled-engine/esm/GlobalStyles/GlobalStyles.js"),useEnhancedEffect=__webpack_require__("./node_modules/@mui/utils/esm/useEnhancedEffect/useEnhancedEffect.js");const DEFAULT_MODE_STORAGE_KEY="mode",DEFAULT_COLOR_SCHEME_STORAGE_KEY="color-scheme",DEFAULT_ATTRIBUTE="data-color-scheme";function noop(){}const cssVars_localStorageManager=({key,storageWindow})=>(storageWindow||"undefined"==typeof window||(storageWindow=window),{get(defaultValue){if("undefined"==typeof window)return;if(!storageWindow)return defaultValue;let value;try{value=storageWindow.localStorage.getItem(key)}catch{}return value||defaultValue},set:value=>{if(storageWindow)try{storageWindow.localStorage.setItem(key,value)}catch{}},subscribe:handler=>{if(!storageWindow)return noop;const listener=event=>{const value=event.newValue;event.key===key&&handler(value)};return storageWindow.addEventListener("storage",listener),()=>{storageWindow.removeEventListener("storage",listener)}}});function useCurrentColorScheme_noop(){}function getSystemMode(mode){if("undefined"!=typeof window&&"function"==typeof window.matchMedia&&"system"===mode){return window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light"}}function processState(state,callback){return"light"===state.mode||"system"===state.mode&&"light"===state.systemMode?callback("light"):"dark"===state.mode||"system"===state.mode&&"dark"===state.systemMode?callback("dark"):void 0}function useCurrentColorScheme(options){const{defaultMode="light",defaultLightColorScheme,defaultDarkColorScheme,supportedColorSchemes=[],modeStorageKey=DEFAULT_MODE_STORAGE_KEY,colorSchemeStorageKey=DEFAULT_COLOR_SCHEME_STORAGE_KEY,storageWindow="undefined"==typeof window?void 0:window,storageManager=cssVars_localStorageManager,noSsr=!1}=options,joinedColorSchemes=supportedColorSchemes.join(","),isMultiSchemes=supportedColorSchemes.length>1,modeStorage=react.useMemo((()=>storageManager?.({key:modeStorageKey,storageWindow})),[storageManager,modeStorageKey,storageWindow]),lightStorage=react.useMemo((()=>storageManager?.({key:`${colorSchemeStorageKey}-light`,storageWindow})),[storageManager,colorSchemeStorageKey,storageWindow]),darkStorage=react.useMemo((()=>storageManager?.({key:`${colorSchemeStorageKey}-dark`,storageWindow})),[storageManager,colorSchemeStorageKey,storageWindow]),[state,setState]=react.useState((()=>{const initialMode=modeStorage?.get(defaultMode)||defaultMode,lightColorScheme=lightStorage?.get(defaultLightColorScheme)||defaultLightColorScheme,darkColorScheme=darkStorage?.get(defaultDarkColorScheme)||defaultDarkColorScheme;return{mode:initialMode,systemMode:getSystemMode(initialMode),lightColorScheme,darkColorScheme}})),[isClient,setIsClient]=react.useState(noSsr||!isMultiSchemes);react.useEffect((()=>{setIsClient(!0)}),[]);const colorScheme=function getColorScheme(state){return processState(state,(mode=>"light"===mode?state.lightColorScheme:"dark"===mode?state.darkColorScheme:void 0))}(state),setMode=react.useCallback((mode=>{setState((currentState=>{if(mode===currentState.mode)return currentState;const newMode=mode??defaultMode;return modeStorage?.set(newMode),{...currentState,mode:newMode,systemMode:getSystemMode(newMode)}}))}),[modeStorage,defaultMode]),setColorScheme=react.useCallback((value=>{value?"string"==typeof value?value&&!joinedColorSchemes.includes(value)?console.error(`\`${value}\` does not exist in \`theme.colorSchemes\`.`):setState((currentState=>{const newState={...currentState};return processState(currentState,(mode=>{"light"===mode&&(lightStorage?.set(value),newState.lightColorScheme=value),"dark"===mode&&(darkStorage?.set(value),newState.darkColorScheme=value)})),newState})):setState((currentState=>{const newState={...currentState},newLightColorScheme=null===value.light?defaultLightColorScheme:value.light,newDarkColorScheme=null===value.dark?defaultDarkColorScheme:value.dark;return newLightColorScheme&&(joinedColorSchemes.includes(newLightColorScheme)?(newState.lightColorScheme=newLightColorScheme,lightStorage?.set(newLightColorScheme)):console.error(`\`${newLightColorScheme}\` does not exist in \`theme.colorSchemes\`.`)),newDarkColorScheme&&(joinedColorSchemes.includes(newDarkColorScheme)?(newState.darkColorScheme=newDarkColorScheme,darkStorage?.set(newDarkColorScheme)):console.error(`\`${newDarkColorScheme}\` does not exist in \`theme.colorSchemes\`.`)),newState})):setState((currentState=>(lightStorage?.set(defaultLightColorScheme),darkStorage?.set(defaultDarkColorScheme),{...currentState,lightColorScheme:defaultLightColorScheme,darkColorScheme:defaultDarkColorScheme})))}),[joinedColorSchemes,lightStorage,darkStorage,defaultLightColorScheme,defaultDarkColorScheme]),handleMediaQuery=react.useCallback((event=>{"system"===state.mode&&setState((currentState=>{const systemMode=event?.matches?"dark":"light";return currentState.systemMode===systemMode?currentState:{...currentState,systemMode}}))}),[state.mode]),mediaListener=react.useRef(handleMediaQuery);return mediaListener.current=handleMediaQuery,react.useEffect((()=>{if("function"!=typeof window.matchMedia||!isMultiSchemes)return;const handler=(...args)=>mediaListener.current(...args),media=window.matchMedia("(prefers-color-scheme: dark)");return media.addListener(handler),handler(media),()=>{media.removeListener(handler)}}),[isMultiSchemes]),react.useEffect((()=>{if(isMultiSchemes){const unsubscribeMode=modeStorage?.subscribe((value=>{value&&!["light","dark","system"].includes(value)||setMode(value||defaultMode)}))||useCurrentColorScheme_noop,unsubscribeLight=lightStorage?.subscribe((value=>{value&&!joinedColorSchemes.match(value)||setColorScheme({light:value})}))||useCurrentColorScheme_noop,unsubscribeDark=darkStorage?.subscribe((value=>{value&&!joinedColorSchemes.match(value)||setColorScheme({dark:value})}))||useCurrentColorScheme_noop;return()=>{unsubscribeMode(),unsubscribeLight(),unsubscribeDark()}}}),[setColorScheme,setMode,joinedColorSchemes,defaultMode,storageWindow,isMultiSchemes,modeStorage,lightStorage,darkStorage]),{...state,mode:isClient?state.mode:void 0,systemMode:isClient?state.systemMode:void 0,colorScheme:isClient?colorScheme:void 0,setMode,setColorScheme}}var createTheme=__webpack_require__("./node_modules/@mui/material/esm/styles/createTheme.js"),createTypography=__webpack_require__("./node_modules/@mui/material/esm/styles/createTypography.js");const defaultConfig={attribute:"data-mui-color-scheme",colorSchemeStorageKey:"mui-color-scheme",defaultLightColorScheme:"light",defaultDarkColorScheme:"dark",modeStorageKey:"mui-mode"};const{CssVarsProvider:InternalCssVarsProvider,useColorScheme,getInitColorSchemeScript:deprecatedGetInitColorSchemeScript}=function createCssVarsProvider(options){const{themeId,theme:defaultTheme={},modeStorageKey:defaultModeStorageKey=DEFAULT_MODE_STORAGE_KEY,colorSchemeStorageKey:defaultColorSchemeStorageKey=DEFAULT_COLOR_SCHEME_STORAGE_KEY,disableTransitionOnChange:designSystemTransitionOnChange=!1,defaultColorScheme,resolveTheme}=options,defaultContext={allColorSchemes:[],colorScheme:void 0,darkColorScheme:void 0,lightColorScheme:void 0,mode:void 0,setColorScheme:()=>{},setMode:()=>{},systemMode:void 0},ColorSchemeContext=react.createContext(void 0),defaultColorSchemes={},defaultComponents={},defaultLightColorScheme="string"==typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.light,defaultDarkColorScheme="string"==typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.dark;return{CssVarsProvider:function CssVarsProvider(props){const{children,theme:themeProp,modeStorageKey=defaultModeStorageKey,colorSchemeStorageKey=defaultColorSchemeStorageKey,disableTransitionOnChange=designSystemTransitionOnChange,storageManager,storageWindow="undefined"==typeof window?void 0:window,documentNode="undefined"==typeof document?void 0:document,colorSchemeNode="undefined"==typeof document?void 0:document.documentElement,disableNestedContext=!1,disableStyleSheetGeneration=!1,defaultMode:initialMode="system",forceThemeRerender=!1,noSsr}=props,hasMounted=react.useRef(!1),upperTheme=useTheme(),ctx=react.useContext(ColorSchemeContext),nested=!!ctx&&!disableNestedContext,initialTheme=react.useMemo((()=>themeProp||("function"==typeof defaultTheme?defaultTheme():defaultTheme)),[themeProp]),scopedTheme=initialTheme[themeId],restThemeProp=scopedTheme||initialTheme,{colorSchemes=defaultColorSchemes,components=defaultComponents,cssVarPrefix}=restThemeProp,joinedColorSchemes=Object.keys(colorSchemes).filter((k=>!!colorSchemes[k])).join(","),allColorSchemes=react.useMemo((()=>joinedColorSchemes.split(",")),[joinedColorSchemes]),defaultLightColorScheme="string"==typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.light,defaultDarkColorScheme="string"==typeof defaultColorScheme?defaultColorScheme:defaultColorScheme.dark,defaultMode=colorSchemes[defaultLightColorScheme]&&colorSchemes[defaultDarkColorScheme]?initialMode:colorSchemes[restThemeProp.defaultColorScheme]?.palette?.mode||restThemeProp.palette?.mode,{mode:stateMode,setMode,systemMode,lightColorScheme,darkColorScheme,colorScheme:stateColorScheme,setColorScheme}=useCurrentColorScheme({supportedColorSchemes:allColorSchemes,defaultLightColorScheme,defaultDarkColorScheme,modeStorageKey,colorSchemeStorageKey,defaultMode,storageManager,storageWindow,noSsr});let mode=stateMode,colorScheme=stateColorScheme;nested&&(mode=ctx.mode,colorScheme=ctx.colorScheme);let calculatedColorScheme=colorScheme||restThemeProp.defaultColorScheme;restThemeProp.vars&&!forceThemeRerender&&(calculatedColorScheme=restThemeProp.defaultColorScheme);const memoTheme=react.useMemo((()=>{const themeVars=restThemeProp.generateThemeVars?.()||restThemeProp.vars,theme={...restThemeProp,components,colorSchemes,cssVarPrefix,vars:themeVars};if("function"==typeof theme.generateSpacing&&(theme.spacing=theme.generateSpacing()),calculatedColorScheme){const scheme=colorSchemes[calculatedColorScheme];scheme&&"object"==typeof scheme&&Object.keys(scheme).forEach((schemeKey=>{scheme[schemeKey]&&"object"==typeof scheme[schemeKey]?theme[schemeKey]={...theme[schemeKey],...scheme[schemeKey]}:theme[schemeKey]=scheme[schemeKey]}))}return resolveTheme?resolveTheme(theme):theme}),[restThemeProp,calculatedColorScheme,components,colorSchemes,cssVarPrefix]),colorSchemeSelector=restThemeProp.colorSchemeSelector;(0,useEnhancedEffect.A)((()=>{if(colorScheme&&colorSchemeNode&&colorSchemeSelector&&"media"!==colorSchemeSelector){const selector=colorSchemeSelector;let rule=colorSchemeSelector;if("class"===selector&&(rule=".%s"),"data"===selector&&(rule="[data-%s]"),selector?.startsWith("data-")&&!selector.includes("%s")&&(rule=`[${selector}="%s"]`),rule.startsWith("."))colorSchemeNode.classList.remove(...allColorSchemes.map((scheme=>rule.substring(1).replace("%s",scheme)))),colorSchemeNode.classList.add(rule.substring(1).replace("%s",colorScheme));else{const matches=rule.replace("%s",colorScheme).match(/\[([^\]]+)\]/);if(matches){const[attr,value]=matches[1].split("=");value||allColorSchemes.forEach((scheme=>{colorSchemeNode.removeAttribute(attr.replace(colorScheme,scheme))})),colorSchemeNode.setAttribute(attr,value?value.replace(/"|'/g,""):"")}else colorSchemeNode.setAttribute(rule,colorScheme)}}}),[colorScheme,colorSchemeSelector,colorSchemeNode,allColorSchemes]),react.useEffect((()=>{let timer;if(disableTransitionOnChange&&hasMounted.current&&documentNode){const css=documentNode.createElement("style");css.appendChild(documentNode.createTextNode("*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}")),documentNode.head.appendChild(css),window.getComputedStyle(documentNode.body),timer=setTimeout((()=>{documentNode.head.removeChild(css)}),1)}return()=>{clearTimeout(timer)}}),[colorScheme,disableTransitionOnChange,documentNode]),react.useEffect((()=>(hasMounted.current=!0,()=>{hasMounted.current=!1})),[]);const contextValue=react.useMemo((()=>({allColorSchemes,colorScheme,darkColorScheme,lightColorScheme,mode,setColorScheme,setMode,systemMode})),[allColorSchemes,colorScheme,darkColorScheme,lightColorScheme,mode,setColorScheme,setMode,systemMode,memoTheme.colorSchemeSelector]);let shouldGenerateStyleSheet=!0;(disableStyleSheetGeneration||!1===restThemeProp.cssVariables||nested&&upperTheme?.cssVarPrefix===cssVarPrefix)&&(shouldGenerateStyleSheet=!1);const element=(0,jsx_runtime.jsxs)(react.Fragment,{children:[(0,jsx_runtime.jsx)(esm_ThemeProvider_ThemeProvider,{themeId:scopedTheme?themeId:void 0,theme:memoTheme,children}),shouldGenerateStyleSheet&&(0,jsx_runtime.jsx)(GlobalStyles.A,{styles:memoTheme.generateStyleSheets?.()||[]})]});return nested?element:(0,jsx_runtime.jsx)(ColorSchemeContext.Provider,{value:contextValue,children:element})},useColorScheme:()=>react.useContext(ColorSchemeContext)||defaultContext,getInitColorSchemeScript:params=>function InitColorSchemeScript(options){const{defaultMode="system",defaultLightColorScheme="light",defaultDarkColorScheme="dark",modeStorageKey=DEFAULT_MODE_STORAGE_KEY,colorSchemeStorageKey=DEFAULT_COLOR_SCHEME_STORAGE_KEY,attribute:initialAttribute=DEFAULT_ATTRIBUTE,colorSchemeNode="document.documentElement",nonce}=options||{};let setter="",attribute=initialAttribute;if("class"===initialAttribute&&(attribute=".%s"),"data"===initialAttribute&&(attribute="[data-%s]"),attribute.startsWith(".")){const selector=attribute.substring(1);setter+=`${colorSchemeNode}.classList.remove('${selector}'.replace('%s', light), '${selector}'.replace('%s', dark));\n      ${colorSchemeNode}.classList.add('${selector}'.replace('%s', colorScheme));`}const matches=attribute.match(/\[([^\]]+)\]/);if(matches){const[attr,value]=matches[1].split("=");value||(setter+=`${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', light));\n      ${colorSchemeNode}.removeAttribute('${attr}'.replace('%s', dark));`),setter+=`\n      ${colorSchemeNode}.setAttribute('${attr}'.replace('%s', colorScheme), ${value?`${value}.replace('%s', colorScheme)`:'""'});`}else setter+=`${colorSchemeNode}.setAttribute('${attribute}', colorScheme);`;return(0,jsx_runtime.jsx)("script",{suppressHydrationWarning:!0,nonce:"undefined"==typeof window?nonce:"",dangerouslySetInnerHTML:{__html:`(function() {\ntry {\n  let colorScheme = '';\n  const mode = localStorage.getItem('${modeStorageKey}') || '${defaultMode}';\n  const dark = localStorage.getItem('${colorSchemeStorageKey}-dark') || '${defaultDarkColorScheme}';\n  const light = localStorage.getItem('${colorSchemeStorageKey}-light') || '${defaultLightColorScheme}';\n  if (mode === 'system') {\n    // handle system mode\n    const mql = window.matchMedia('(prefers-color-scheme: dark)');\n    if (mql.matches) {\n      colorScheme = dark\n    } else {\n      colorScheme = light\n    }\n  }\n  if (mode === 'light') {\n    colorScheme = light;\n  }\n  if (mode === 'dark') {\n    colorScheme = dark;\n  }\n  if (colorScheme) {\n    ${setter}\n  }\n} catch(e){}})();`}},"mui-color-scheme-init")}({colorSchemeStorageKey:defaultColorSchemeStorageKey,defaultLightColorScheme,defaultDarkColorScheme,modeStorageKey:defaultModeStorageKey,...params})}}({themeId:identifier.A,theme:()=>(0,createTheme.A)({cssVariables:!0}),colorSchemeStorageKey:defaultConfig.colorSchemeStorageKey,modeStorageKey:defaultConfig.modeStorageKey,defaultColorScheme:{light:defaultConfig.defaultLightColorScheme,dark:defaultConfig.defaultDarkColorScheme},resolveTheme:theme=>{const newTheme={...theme,typography:(0,createTypography.A)(theme.palette,theme.typography)};return newTheme.unstable_sx=function sx(props){return(0,styleFunctionSx.A)({sx:props,theme:this})},newTheme}});const CssVarsProvider=InternalCssVarsProvider;function styles_ThemeProvider_ThemeProvider({theme,...props}){const noVarsTheme=react.useMemo((()=>{if("function"==typeof theme)return theme;const muiTheme=identifier.A in theme?theme[identifier.A]:theme;return"colorSchemes"in muiTheme?null:"vars"in muiTheme?theme:{...theme,vars:null}}),[theme]);return noVarsTheme?(0,jsx_runtime.jsx)(ThemeProviderNoVars,{theme:noVarsTheme,...props}):(0,jsx_runtime.jsx)(CssVarsProvider,{theme,...props})}},"./node_modules/@mui/system/esm/RtlProvider/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>__WEBPACK_DEFAULT_EXPORT__,I:()=>useRtl});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/jsx-runtime.js");const RtlContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext();const useRtl=()=>react__WEBPACK_IMPORTED_MODULE_0__.useContext(RtlContext)??!1,__WEBPACK_DEFAULT_EXPORT__=function RtlProvider({value,...props}){return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(RtlContext.Provider,{value:value??!0,...props})}}}]);