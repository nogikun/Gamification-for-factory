services:
  # APIサーバー - ユーザーデータやステータス情報の処理
  api:
    build:
      context: ./backend/api
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - "./backend/api:/app"
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres
    restart: unless-stopped
    networks:
      - default

  # PostgreSQLデータベース - ユーザーや企業情報の保存
  postgres:
    build:
      context: ./backend/database
      dockerfile: Dockerfile
    volumes:
      - ./backend/database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - default

  # フロントエンド - Reactアプリケーション
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api
    restart: unless-stopped
    networks:
      - default

  adminer:
    image: adminer
    restart: always
    environment:
      - ADMINER_DESIGN=pepa_linha
      - SERVER=postgres
    ports:
      - 5050:8080
    depends_on:
      - postgres
    networks:
      - default

networks:
  default:
    driver: bridge

volumes:
  postgres-data: